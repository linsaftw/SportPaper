From 711f21f9e5712264f8226c941089d6ac1e52407c Mon Sep 17 00:00:00 2001
From: PermisosDev <55111245+PermisosDev@users.noreply.github.com>
Date: Sat, 8 May 2021 20:33:59 -0300
Subject: [PATCH] TabCompleteEvent added to api


diff --git a/src/main/java/org/bukkit/event/player/PlayerCommandSendEvent.java b/src/main/java/org/bukkit/event/player/PlayerCommandSendEvent.java
new file mode 100644
index 00000000..6ab24ba4
--- /dev/null
+++ b/src/main/java/org/bukkit/event/player/PlayerCommandSendEvent.java
@@ -0,0 +1,46 @@
+package org.bukkit.event.player;
+
+import java.util.Collection;
+import org.bukkit.entity.Player;
+import org.bukkit.event.HandlerList;
+
+/**
+ * This event is called when the list of available server commands is sent to
+ * the player.
+ * <br>
+ * Commands may be removed from display using this event, but implementations
+ * are not required to securely remove all traces of the command. If secure
+ * removal of commands is required, then the command should be assigned a
+ * permission which is not granted to the player.
+ */
+public class PlayerCommandSendEvent extends PlayerEvent {
+
+    private static final HandlerList handlers = new HandlerList();
+    private final Collection<String> commands;
+
+    public PlayerCommandSendEvent(final Player player, final Collection<String> commands) {
+        super(player);
+        this.commands = commands;
+    }
+
+    /**
+     * Returns a mutable collection of all top level commands to be sent.
+     * <br>
+     * It is not legal to add entries to this collection, only remove them.
+     * Behaviour of adding entries is undefined.
+     *
+     * @return collection of all commands
+     */
+    public Collection<String> getCommands() {
+        return commands;
+    }
+
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
diff --git a/src/main/java/org/bukkit/event/server/TabCompleteEvent.java b/src/main/java/org/bukkit/event/server/TabCompleteEvent.java
new file mode 100644
index 00000000..a7c953f8
--- /dev/null
+++ b/src/main/java/org/bukkit/event/server/TabCompleteEvent.java
@@ -0,0 +1,124 @@
+package org.bukkit.event.server;
+
+import java.util.ArrayList;
+import java.util.List;
+import org.apache.commons.lang.Validate;
+import org.bukkit.command.CommandSender;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerCommandSendEvent;
+
+/**
+ * Called when a {@link CommandSender} of any description (ie: player or
+ * console) attempts to tab complete.
+ * <br>
+ * Note that due to client changes, if the sender is a Player, this event will
+ * only begin to fire once command arguments are specified, not commands
+ * themselves. Plugins wishing to remove commands from tab completion are
+ * advised to ensure the client does not have permission for the relevant
+ * commands, or use {@link PlayerCommandSendEvent}.
+ */
+public class TabCompleteEvent extends Event implements Cancellable {
+
+    private static final HandlerList handlers = new HandlerList();
+    //
+    private final CommandSender sender;
+    private final String buffer;
+    private List<String> completions;
+    private boolean cancelled;
+
+    public TabCompleteEvent(CommandSender sender, String buffer, List<String> completions) {
+        // Paper start
+        this(sender, buffer, completions, sender instanceof org.bukkit.command.ConsoleCommandSender || buffer.startsWith("/"), null);
+    }
+    public TabCompleteEvent(CommandSender sender, String buffer,  List<String> completions, boolean isCommand, org.bukkit.Location location) {
+        this.isCommand = isCommand;
+        this.loc = location;
+        // Paper end
+        Validate.notNull(sender, "sender");
+        Validate.notNull(buffer, "buffer");
+        Validate.notNull(completions, "completions");
+
+        this.sender = sender;
+        this.buffer = buffer;
+        this.completions = completions;
+    }
+
+    /**
+     * Get the sender completing this command.
+     *
+     * @return the {@link CommandSender} instance
+     */
+    public CommandSender getSender() {
+        return sender;
+    }
+
+    /**
+     * Return the entire buffer which formed the basis of this completion.
+     *
+     * @return command buffer, as entered
+     */
+    public String getBuffer() {
+        return buffer;
+    }
+
+    /**
+     * The list of completions which will be offered to the sender, in order.
+     * This list is mutable and reflects what will be offered.
+     *
+     * @return a list of offered completions
+     */
+    public List<String> getCompletions() {
+        return completions;
+    }
+
+    // Paper start
+    private final boolean isCommand;
+    private final org.bukkit.Location loc;
+    /**
+     * @return True if it is a command being tab completed, false if it is a chat message.
+     */
+    public boolean isCommand() {
+        return isCommand;
+    }
+
+    /**
+     * @return The position looked at by the sender, or null if none
+     */
+    public org.bukkit.Location getLocation() {
+        return loc;
+    }
+    // Paper end
+
+    /**
+     * Set the completions offered, overriding any already set.
+     *
+     * The passed collection will be cloned to a new List. You must call {{@link #getCompletions()}} to mutate from here
+     *
+     * @param completions the new completions
+     */
+    public void setCompletions(List<String> completions) {
+        Validate.notNull(completions);
+        this.completions = new ArrayList<>(completions); // Paper
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancelled) {
+        this.cancelled = cancelled;
+    }
+
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
-- 
2.29.2.windows.3

